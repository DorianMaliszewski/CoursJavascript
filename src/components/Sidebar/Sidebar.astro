---
import Link from "components/Link.astro";
import MenuIcon from "components/MenuIcon.astro";
import { getLangFromUrl, useTranslations } from "i18n/utils";
import MMI2Menu from "./MMI2Menu/MMI2Menu.astro";
import Semestre1Menu from "./Semestre1Menu/semestre1Menu.astro";
import Semestre2Menu from "./Semestre2Menu/semestre2Menu.astro";
import Semestre3Menu from "./Semestre3Menu/semestre3Menu.astro";
import { PATHS } from "paths";
import { getCollection } from "astro:content";
import { coerce } from "astro:schema";

// CA FONCTIONNE PAS LE TERMINAL IL A ENCORE BUG !!!!!
// const allBlogPosts = await getCollection('pages');

// type Category = {
//   id: string
//   title: string
//   path: string
//   items: Category[]
// }

// function createCategory(items: Category[], depth: number, allPosts: typeof allBlogPosts): Category[] {
//   return allPosts.reduce((acc, next) => {
//   const pathId = next.id.split('/').slice(depth, depth + 1).join('/')
//   const categoryIndex = acc.findIndex(({id}) => next.id && id === pathId)
//   if (categoryIndex > -1) {
//     const category = acc[categoryIndex]
//     const subItems = allPosts.filter(({id}) => id.startsWith(next.id))
//     if (subItems.length > 0) {
//       if (category.id.startsWith('semestre1')) {
//         category.items = createCategory(category.items, depth + 1, subItems)
//       }
//     } else {
//       category.items.push({
//         id: pathId,
//         title: next.data.title ?? 'non',
//         items: [],
//         path: next.id.split('/')[depth]
//       })
//     }
//   } else {
//     if (next.id) {
//       acc.push({
//         id: pathId,
//         title: next.id.split('/')[depth],
//         items: [],
//         path: next.id.split('/')[depth]
//       })
//     }
//   }

//   return acc
// }, items)
// }

// const formatted = createCategory([], 0, allBlogPosts)

// console.log(JSON.stringify(formatted, null, 2))

const allBlogPosts = await getCollection("pages");

type Category = {
  id: string;
  title: string;
  path: string;
  items: Category[];
};

console.log(JSON.stringify(recurAntoine(allBlogPosts, null),null, 2));

function recurAntoine(sub: typeof allBlogPosts, subDir: string|null) {
  const final = [];
  const ids = [
    ...new Set(sub.map((post) => post.filePath.replace("src/pages/fr/","").replace(subDir+"/", "").split("/")[0])),
  ];

  console.log(ids, "le filtre etait  :  " + subDir)
  ids.forEach((id) => {
    const customsuffixe = subDir?`${subDir}/${id}`:id;
    const childrens = sub.filter((p) =>
      p.id.startsWith(customsuffixe)
    );

    final.push({
      title: id,
      path: customsuffixe,
      items: recurAntoine(childrens, customsuffixe),
    });
  });

  return final;
}

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<script is:inline>
  function handleClick() {
    document.getElementById("sidebar").classList.toggle("-translate-x-full");
  }

  function isSideBarOpen() {
    document.getElementById("sidebar").classList.contains("-translate-x-full");
  }

  document.addEventListener("DOMContentLoaded", () => {
    const detailsElements = document.querySelectorAll("details");
    const localStorageKey = "openDetails";

    const getInitialState = () => {
      const storedState = localStorage.getItem(localStorageKey);
      return storedState ? JSON.parse(storedState) : {};
    };

    const initialState = getInitialState();
    detailsElements.forEach((details) => {
      details.open = !!initialState[details.id] ?? false;

      details.addEventListener("toggle", () => {
        const state = {};
        detailsElements.forEach((el) => {
          if (el.id) {
            state[el.id] = el.open;
          }
        });
        localStorage.setItem(localStorageKey, JSON.stringify(state));
      });
    });
  });
</script>

<div
  style="background: linear-gradient( to bottom,var(--fallback-b1, oklch(var(--b1) / 1)) 0%,var(--fallback-b1, oklch(var(--b1) / 1)) 60%,transparent 100%);"
  class="fixed top-0 left-0 w-100 border-solid w-full pb-10 z-1000"
>
  <button
    onclick="handleClick()"
    aria-controls="sidebar"
    type="button"
    class="inline-flex items-center p-2 mt-4 ms-3 text-sm text-gray-500 rounded-lg hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600"
  >
    <span class="sr-only">Open sidebar</span>
    <MenuIcon isOpen={false} />
  </button>
</div>

<aside
  id="sidebar"
  class="fixed top-0 left-0 z-40 w-96 h-screen transition-transform -translate-x-full"
  aria-label="Sidebar"
>
  <div class="h-full px-3 py-4 overflow-y-auto bg-gray-50 dark:bg-gray-800">
    <div class="flex gap-5 items-center mb-5">
      <button
        type="button"
        onclick="handleClick()"
        aria-controls="sidebar"
        class="inline-flex items-center p-2 text-sm text-gray-500 rounded-lg hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600"
      >
        <span class="sr-only">Close sidebar</span>
        <MenuIcon isOpen={true} />
      </button>
      <Link href="/" className="flex items-center">
        <span
          class="self-center text-xl font-semibold whitespace-nowrap dark:text-white"
          >MMI Cours</span
        >
      </Link>
    </div>
    <ul class="space-y-2 font-medium menu">
      <li>
        <details id="semestre1">
          <summary>{t("menu.semestre1.title")}</summary>
          <Semestre1Menu />
        </details>
      </li>
      <li>
        <details id="semestre2">
          <summary>{t("menu.semestre2.title")}</summary>
          <Semestre2Menu />
        </details>
      </li>
      <li>
        <details id="semestre3">
          <summary>{t("menu.semestre3.title")}</summary>
          <Semestre3Menu />
        </details>
      </li>
      <li>
        <details id="test2">
          <summary>{t("menu.mmi2.title")}</summary>
          <MMI2Menu />
        </details>
      </li>
      <li>
        <Link type="QI" href={PATHS.oral}>
          {t("menu.quiz.generation")}
        </Link>
      </li>
    </ul>
  </div>
</aside>
